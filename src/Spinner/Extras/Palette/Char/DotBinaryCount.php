<?php

declare(strict_types=1);

namespace AlecRabbit\Spinner\Extras\Palette\Char;

use AlecRabbit\Spinner\Contract\ICharSequenceFrame;
use AlecRabbit\Spinner\Core\CharSequenceFrame;
use AlecRabbit\Spinner\Core\Palette\A\ACharPalette;
use AlecRabbit\Spinner\Core\Palette\Contract\IPaletteOptions;
use AlecRabbit\Spinner\Core\Palette\PaletteOptions;
use ArrayObject;
use Traversable;

/**
 * @psalm-suppress UnusedClass
 */
final class DotBinaryCount extends ACharPalette
{
    public function __construct(
        IPaletteOptions $options = new PaletteOptions(interval: 1000),
        int $index = 0,
    ) {
        parent::__construct(
            $this->getFrames(),
            $options,
            $index
        );
    }

    private function getFrames(): ArrayObject
    {
        $frames = [];
        /** @var string $item */
        foreach ($this->sequence() as $item) {
            $frames[] = $this->createFrame($item);
        }
        return new ArrayObject($frames);
    }

    private function sequence(): Traversable
    {
        yield from [
            '⠀',
            '⠁',
            '⠂',
            '⠃',
            '⠄',
            '⠅',
            '⠆',
            '⠇',
            '⡀',
            '⡁',
            '⡂',
            '⡃',
            '⡄',
            '⡅',
            '⡆',
            '⡇',
            '⠈',
            '⠉',
            '⠊',
            '⠋',
            '⠌',
            '⠍',
            '⠎',
            '⠏',
            '⡈',
            '⡉',
            '⡊',
            '⡋',
            '⡌',
            '⡍',
            '⡎',
            '⡏',
            '⠐',
            '⠑',
            '⠒',
            '⠓',
            '⠔',
            '⠕',
            '⠖',
            '⠗',
            '⡐',
            '⡑',
            '⡒',
            '⡓',
            '⡔',
            '⡕',
            '⡖',
            '⡗',
            '⠘',
            '⠙',
            '⠚',
            '⠛',
            '⠜',
            '⠝',
            '⠞',
            '⠟',
            '⡘',
            '⡙',
            '⡚',
            '⡛',
            '⡜',
            '⡝',
            '⡞',
            '⡟',
            '⠠',
            '⠡',
            '⠢',
            '⠣',
            '⠤',
            '⠥',
            '⠦',
            '⠧',
            '⡠',
            '⡡',
            '⡢',
            '⡣',
            '⡤',
            '⡥',
            '⡦',
            '⡧',
            '⠨',
            '⠩',
            '⠪',
            '⠫',
            '⠬',
            '⠭',
            '⠮',
            '⠯',
            '⡨',
            '⡩',
            '⡪',
            '⡫',
            '⡬',
            '⡭',
            '⡮',
            '⡯',
            '⠰',
            '⠱',
            '⠲',
            '⠳',
            '⠴',
            '⠵',
            '⠶',
            '⠷',
            '⡰',
            '⡱',
            '⡲',
            '⡳',
            '⡴',
            '⡵',
            '⡶',
            '⡷',
            '⠸',
            '⠹',
            '⠺',
            '⠻',
            '⠼',
            '⠽',
            '⠾',
            '⠿',
            '⡸',
            '⡹',
            '⡺',
            '⡻',
            '⡼',
            '⡽',
            '⡾',
            '⡿',
            '⢀',
            '⢁',
            '⢂',
            '⢃',
            '⢄',
            '⢅',
            '⢆',
            '⢇',
            '⣀',
            '⣁',
            '⣂',
            '⣃',
            '⣄',
            '⣅',
            '⣆',
            '⣇',
            '⢈',
            '⢉',
            '⢊',
            '⢋',
            '⢌',
            '⢍',
            '⢎',
            '⢏',
            '⣈',
            '⣉',
            '⣊',
            '⣋',
            '⣌',
            '⣍',
            '⣎',
            '⣏',
            '⢐',
            '⢑',
            '⢒',
            '⢓',
            '⢔',
            '⢕',
            '⢖',
            '⢗',
            '⣐',
            '⣑',
            '⣒',
            '⣓',
            '⣔',
            '⣕',
            '⣖',
            '⣗',
            '⢘',
            '⢙',
            '⢚',
            '⢛',
            '⢜',
            '⢝',
            '⢞',
            '⢟',
            '⣘',
            '⣙',
            '⣚',
            '⣛',
            '⣜',
            '⣝',
            '⣞',
            '⣟',
            '⢠',
            '⢡',
            '⢢',
            '⢣',
            '⢤',
            '⢥',
            '⢦',
            '⢧',
            '⣠',
            '⣡',
            '⣢',
            '⣣',
            '⣤',
            '⣥',
            '⣦',
            '⣧',
            '⢨',
            '⢩',
            '⢪',
            '⢫',
            '⢬',
            '⢭',
            '⢮',
            '⢯',
            '⣨',
            '⣩',
            '⣪',
            '⣫',
            '⣬',
            '⣭',
            '⣮',
            '⣯',
            '⢰',
            '⢱',
            '⢲',
            '⢳',
            '⢴',
            '⢵',
            '⢶',
            '⢷',
            '⣰',
            '⣱',
            '⣲',
            '⣳',
            '⣴',
            '⣵',
            '⣶',
            '⣷',
            '⢸',
            '⢹',
            '⢺',
            '⢻',
            '⢼',
            '⢽',
            '⢾',
            '⢿',
            '⣸',
            '⣹',
            '⣺',
            '⣻',
            '⣼',
            '⣽',
            '⣾',
            '⣿',
        ];
    }

    private function createFrame(string $element): ICharSequenceFrame
    {
        return new CharSequenceFrame($element, 1);
    }
}
